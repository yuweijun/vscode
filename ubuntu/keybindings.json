// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "alt+w",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "alt+c",
        "command": "editor.action.clipboardCopyAction",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+,",
        "command": "workbench.action.openGlobalSettings"
    },
    {
        "key": "alt+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+v",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus"
    },
    {
        "key": "alt+c",
        "command": "problems.action.copy",
        "when": "problemFocus"
    },
    {
        "key": "alt+c",
        "command": "keybindings.editor.copyKeybindingEntry",
        "when": "inKeybindings && keybinocu"
    },
    {
        "key": "alt+c",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalTextSelected"
    },
    {
        "key": "alt+a",
        "command": "editor.action.selectAll"
    },
    {
        "key": "alt+m",
        "command": "editor.action.toggleMinimap"
    },
    {
        "key": "alt+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "shift+alt+z",
        "command": "redo",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+backspace",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+d",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+[",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "alt+]",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "alt+k alt+s",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "shift+alt+e",
        "command": "workbench.view.explorer"
    },
    {
        "key": "shift+alt+p",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "shift+alt+x",
        "command": "workbench.view.extensions"
    },
    {
        "key": "shift+alt+g",
        "command": "workbench.view.scm"
    },
    {
        "key": "shift+alt+d",
        "command": "workbench.view.debug"
    },
    {
        "key": "alt+t",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "shift+alt+f",
        "command": "workbench.action.findInFiles",
        "when": "!editorFocus && !searchInputBoxFocus"
    },
    {
        "key": "shift+alt+f",
        "command": "workbench.view.search",
        "when": "!editorFocus && !searchViewletVisible"
    },
    {
        "key": "shift+alt+f",
        "command": "search.action.focusActiveEditor",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+-",
        "command": "workbench.files.action.collapseExplorerFolders"
    },
    {
        "key": "shift+alt+y",
        "command": "workbench.debug.action.toggleRepl"
    },
    {
        "key": "shift+alt+m",
        "command": "workbench.actions.view.problems"
    },
    {
        "key": "alt+/",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+f",
        "command": "editor.action.formatDocument",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen"
    },
    {
        "key": "ctrl+meta+w",
        "command": "-workbench.action.toggleTabsVisibility"
    },
    {
        "key": "ctrl+k w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+f9",
        "command": "editor.debug.action.runToCursor"
    },
    {
        "key": "shift+enter",
        "command": "-settings.action.focusPreviousSetting",
        "when": "inSettingsSearch"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "backspace",
        "command": "-extension.vim_backspace",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "meta+a",
        "command": "-extension.vim_cmd+a",
        "when": "editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "shift+alt+down",
        "command": "-extension.vim_cmd+alt+down",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "shift+alt+down",
        "command": "-extension.vim_cmd+alt+down",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "shift+alt+up",
        "command": "-extension.vim_cmd+alt+up",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "meta+c",
        "command": "-extension.vim_cmd+c",
        "when": "editorTextFocus && vim.active && vim.overrideCopy && vim.use<D-c> && !inDebugRepl"
    },
    {
        "key": "meta+v",
        "command": "-extension.vim_cmd+v",
        "when": "editorTextFocus && vim.active && vim.use<D-v> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "meta+right",
        "command": "-extension.vim_cmd+right",
        "when": "editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "meta+left",
        "command": "-extension.vim_cmd+left",
        "when": "editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+[",
        "command": "-extension.vim_ctrl+[",
        "when": "editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-extension.vim_ctrl+pagedown",
        "when": "editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"
    },
    {
        "key": "ctrl+pageup",
        "command": "-extension.vim_ctrl+pageup",
        "when": "editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"
    },
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "suggestWidgetVisible && vim.active && vim.use<C-p>"
    },
    {
        "key": "ctrl+o",
        "command": "-extension.vim_ctrl+o",
        "when": "editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"
    },
    {
        "key": "ctrl+n",
        "command": "-extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl"
    },
    {
        "key": "ctrl+k",
        "command": "-extension.vim_ctrl+k",
        "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "-extension.vim_ctrl+j",
        "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+i",
        "command": "-extension.vim_ctrl+i",
        "when": "editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"
    },
    {
        "key": "ctrl+h",
        "command": "-extension.vim_ctrl+h",
        "when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+e",
        "command": "-extension.vim_ctrl+e",
        "when": "editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"
    },
    {
        "key": "ctrl+c",
        "command": "-extension.vim_ctrl+c",
        "when": "editorTextFocus && vim.active && vim.overrideCtrlC && vim.use<C-c> && !inDebugRepl"
    },
    {
        "key": "ctrl+a",
        "command": "-extension.vim_ctrl+a",
        "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
    },
    {
        "key": "ctrl+]",
        "command": "-extension.vim_ctrl+]",
        "when": "editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"
    },
    {
        "key": "ctrl+c",
        "command": "-extension.vim_ctrl+c",
        "when": "editorTextFocus && vim.active && vim.overrideCtrlC && vim.use<C-c> && !inDebugRepl"
    },
    {
        "key": "ctrl+b",
        "command": "-extension.vim_ctrl+b",
        "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+a",
        "command": "-extension.vim_ctrl+a",
        "when": "editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"
    },
    {
        "key": "ctrl+shift+2",
        "command": "-extension.vim_ctrl+shift+2",
        "when": "editorTextFocus && vim.active && vim.use<C-shift+2>"
    },
    {
        "key": "ctrl+t",
        "command": "-extension.vim_ctrl+t",
        "when": "editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"
    },
    {
        "key": "ctrl+w",
        "command": "-extension.vim_ctrl+w",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
    },
    {
        "key": "ctrl+x",
        "command": "-extension.vim_ctrl+x",
        "when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"
    },
    {
        "key": "ctrl+y",
        "command": "-extension.vim_ctrl+y",
        "when": "editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"
    },
    {
        "key": "delete",
        "command": "-extension.vim_delete",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "up",
        "command": "-extension.vim_up",
        "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "shift+backspace",
        "command": "-extension.vim_shift+backspace",
        "when": "editorTextFocus && vim.active && vim.use<shift+BS> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "right",
        "command": "-extension.vim_right",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "ctrl+w k",
        "command": "-extension.vim_navigateUp",
        "when": "vim.active && vim.use<C-w> && !editorTextFocus"
    },
    {
        "key": "ctrl+w l",
        "command": "-extension.vim_navigateRight",
        "when": "vim.active && vim.use<C-w> && !editorTextFocus"
    },
    {
        "key": "ctrl+w h",
        "command": "-extension.vim_navigateLeft",
        "when": "vim.active && vim.use<C-w> && !editorTextFocus"
    },
    {
        "key": "ctrl+w ctrl+w",
        "command": "-extension.vim_navigateGroups",
        "when": "vim.active && vim.use<C-w> && !editorTextFocus"
    },
    {
        "key": "ctrl+w j",
        "command": "-extension.vim_navigateDown",
        "when": "vim.active && vim.use<C-w> && !editorTextFocus"
    },
    {
        "key": "left",
        "command": "-extension.vim_left",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "home",
        "command": "-extension.vim_home",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "end",
        "command": "-extension.vim_end",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "down",
        "command": "-extension.vim_down",
        "when": "editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "shift+alt+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "alt+p",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "alt+p",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "shift+alt+r",
        "command": "workbench.files.action.refreshFilesExplorer"
    },
    {
        "key": "ctrl+alt+x",
        "command": "workbench.output.action.clearOutput"
    },
    {
        "key": "ctrl+alt+z",
        "command": "git.clean"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFindWidget",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.webvieweditor.showFind",
        "when": "webviewEditorFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-actions.find"
    },
    {
        "key": "alt+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+.",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+.",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+u",
        "command": "workbench.action.output.toggleOutput"
    },
    {
        "key": "ctrl+k ctrl+h",
        "command": "-workbench.action.output.toggleOutput"
    },
    {
        "key": "shift+alt+h",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+shift+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+shift+r",
        "command": "git.refresh"
    },
    {
        "key": "alt+k alt+k",
        "command": "editor.action.defineKeybinding",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "-editor.action.defineKeybinding",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
    },
    {
        "key": "alt+k alt+k",
        "command": "keybindings.editor.defineKeybinding",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "-keybindings.editor.defineKeybinding",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "alt+k alt+0",
        "command": "editor.foldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+/",
        "command": "editor.foldAllBlockComments",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+/",
        "command": "-editor.foldAllBlockComments",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+8",
        "command": "editor.foldAllMarkerRegions",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+8",
        "command": "-editor.foldAllMarkerRegions",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+1",
        "command": "editor.foldLevel1",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+1",
        "command": "-editor.foldLevel1",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+2",
        "command": "editor.foldLevel2",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+2",
        "command": "-editor.foldLevel2",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+3",
        "command": "editor.foldLevel3",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+3",
        "command": "-editor.foldLevel3",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+4",
        "command": "editor.foldLevel4",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+4",
        "command": "-editor.foldLevel4",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+5",
        "command": "editor.foldLevel5",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+5",
        "command": "-editor.foldLevel5",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+6",
        "command": "editor.foldLevel6",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+6",
        "command": "-editor.foldLevel6",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+7",
        "command": "editor.foldLevel7",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+7",
        "command": "-editor.foldLevel7",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+[",
        "command": "editor.foldRecursively",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+[",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+f",
        "command": "editor.action.formatSelection",
        "when": "editorHasSelection && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasSelection && editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+k alt+j",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+9",
        "command": "editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+9",
        "command": "-editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+]",
        "command": "editor.unfoldRecursively",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+]",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k alt+x",
        "command": "editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+x",
        "command": "-editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "-workbench.extensions.action.showRecommendedKeymapExtensions"
    },
    {
        "key": "shift+alt+[",
        "command": "editor.fold",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+]",
        "command": "editor.unfold",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+t",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "alt+f12",
        "command": "editor.action.previewDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+f10",
        "command": "-editor.action.previewDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+z",
        "command": "undo",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+z",
        "command": "-editor.action.toggleWordWrap"
    },
    {
        "key": "ctrl+shift+o",
        "command": "java.edit.organizeImports",
        "when": "editorTextFocus && !editorReadnly"
    },
    {
        "key": "shift+alt+o",
        "command": "-java.edit.organizeImports",
        "when": "editorTextFocus && !editorReadnly"
    },
    {
        "key": "shift+alt+o",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+shift+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "alt+x",
        "command": "editor.action.clipboardCutAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+r",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "alt+k c",
        "command": "workbench.files.action.compareWithClipboard"
    },
    {
        "key": "ctrl+k c",
        "command": "-workbench.files.action.compareWithClipboard"
    },
    {
        "key": "alt+k d",
        "command": "workbench.files.action.compareWithSaved"
    },
    {
        "key": "ctrl+k d",
        "command": "-workbench.files.action.compareWithSaved"
    },
    {
        "key": "alt+k alt+u",
        "command": "java.projectConfiguration.update",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+u",
        "command": "-java.projectConfiguration.update",
        "when": "editorFocus"
    }
]